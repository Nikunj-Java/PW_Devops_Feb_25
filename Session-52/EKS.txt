AWS EKS (Elastic Kubernetes Service)
******************** I am USER Permission****************************
1. AdministratorAccess
2. AmazonEC2ContainerRegistryFullAccess
3. AmazonEC2FullAccess
4. AmazonEKSClusterPolicy
5. AmazonEKSServicePolicy
6. AmazonEKSWorkerNodePolicy
7. CloudWatchLogsFullAccess
8. ElasticLoadBalancingFullAccess
9. IAMFullAccess
10.IAMUserChangePassword


**************Check the version of ekctl & if not installed install it******************
EKSCTL Installation
--------------------

ARCH=amd64
PLATFORM=$(uname -s)_$ARCH

curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"

# (Optional) Verify checksum
curl -sL "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt" | grep $PLATFORM | sha256sum --check

tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz

sudo install -m 0755 /tmp/eksctl /usr/local/bin && rm /tmp/eksctl
--------------------------------------------------------------------
> eksctl version

**************Setup a Cluster***********************************************************
eksctl create cluster --name dev-cluster --region us-east-1 --nodegroup-name dev-nodes --node-type t3.medium --nodes 2 --nodes-min 2 --nodes-max 5 --managed

--name: Name of your cluster
--region: AWS region (us-east-1)
--node-type: ec2 Instance type
--node: No.of instance in node group
--managed: managed node groups


*********** Update Kubeconfig ****************
so we can talk to our cluster

aws eks --region us-east-1 update-kubeconfig --name dev-cluster

*********** Test your cluster *****************
kubectl get nodes
kubectl get svc 

*********** Deploy a Test Application *********

kubectl create deployment nginx --image=nginx

kubectl expose deployment nginx --port=80 --type=LoadBalancer

kubectl get svc

(it will take time to get the load balancer external IP)
you can see th LoadBalancer DNS there

Loo like this:
a13fd6aa35cf44d55a019b123fe8a082-253251484.us-east-1.elb.amazonaws.com

(this will provide default nginx page)

you can check the default deployment logs 


kubectl logs deployment/nginx


NOTE: Once Everything Done Make sure to close it.

-- kubectl delte service nginx
-- kubectl delete deployment nginx
-- eksctl delete cluster --name dev-cluster --region us-east-1

********************* How Pods Distributed among nodes *****************************

-- kubectl create deployment nginx --replicas=4
-- kubectl get pods -o wide
(you can see different pods assigned with different nodes)

-- kubectl delete deployment/nginx

******************** SCALE Pods Dynamically ***********************